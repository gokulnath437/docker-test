name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/test-image:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Add user to Docker group
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            sudo usermod -aG docker $USER
            sudo chmod 666 /var/run/docker.sock
          EOF

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Pull the latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/test-image:latest

            # Stop and remove the old container
            
            docker rm /cont -f || true

            # Remove all old images except the latest one
            #docker image prune -a -f --filter "label!=${{ secrets.DOCKER_USERNAME }}/test-image:latest"

            # Run the new container
            docker run -d --name cont -p 8085:80 ${{ secrets.DOCKER_USERNAME }}/test-image:latest
          EOF

